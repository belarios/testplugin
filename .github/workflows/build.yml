# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  
  GH_TOKEN: ${{ github.token }}

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Create Directory
      run: New-Item -Path 'D:\\ACTv3' -ItemType Directory -Force

    - name: Download ACT
      run: Invoke-WebRequest -Uri 'https://advancedcombattracker.com/download.php?id=57' -OutFile 'D:\\ACTv3\\ACTv3.zip'

    - name: Unzip ACT
      run: Expand-Archive 'D:\\ACTv3\\ACTv3.zip' -DestinationPath 'D:\\ACTv3\\' -Force

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} /p:OutputPath=D:\bin

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: "D:\\bin\\EQ_ACT_Plugin.dll"

    # - name: Publish
    #   uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: "D:\\bin\\EQ_ACT_Plugin.dll"
    #     tag: 0.${{ github.run_number }}
